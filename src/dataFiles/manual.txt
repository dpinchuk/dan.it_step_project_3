Примитивный функциоал просмотра существующих самолетных рейсов и бронирования билетов.

Как это работает:

- в файле Constants содержатся все существующие настройки (имена понятны).
- для теста предлагается взять пользователя {pinchuk.da, 111111}

1. Если нет файлов с фанными (юзеры, рейсы, забронированные рейсы) - система автоматически сгенерирует список рейсов,
дефолтных пользователей и их забронированных пользователей. Будет выведено в консоли:

Files created successfully!
New database generated successfully!
Data written successfully!

После этого отображено консольное меню пользователя.

2. Основное консольное меню содержит следующие пункты при определенных условиях, а именно:

    а) если юзер не залогинен, то
        [0] - Exit                                              -   выход из системы
        [1] - Online scoreboard                                 -   просмотр рейсов в течение указанного в настройках времени (24 часа подефолту)
        [2] - View flight information                           -   выполняется поиск инфы по указанному [id] рейса
        [3] - Search flight by data and booking [Guest Guest]   -   ищет и бронирует рейс (не доступен без авторизации)
        [4] - Cancel booking [Guest Guest]                      -   удаляет забронированный рейс по [id] (не доступен без авторизации)
        [5] - Show user flights  [Guest Guest]                  -   выводит все забронированные рейсы текущего юзера (не доступен без авторизации)
        [6] - Log in                                            -   выполняет авторизацию
        [7] - Registration                                      -   выполняет регистрацию пользователя

    б) если юзер авторизован, то
        [0] - Exit
        [1] - Online scoreboard
        [2] - View flight information
        [3] - Search flight by data and booking [Session id: 243440406]
        [4] - Cancel booking [Session id: 243440406]
        [5] - Show user flights  [Session id: 243440406]
        [6] - Log out [Session id: 243440406]

        , где [Session id] вычисляется по hash-коду объекта юзера

3. После завершения работы функционала все данные перезаписываются в файлы

4. Меню более-менее понятно и не должно вызывать трудностей. Опытный QA сломает все, что можно, поэтому хоть проверки
и присутствуют, но их не достаточно, да я и не заморачивался особо))

5. Надеюсь, Вам понравится)